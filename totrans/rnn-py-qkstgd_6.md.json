["```py\nwith tf.device('/cpu:0'):\n    # call a function that fetches and transforms the data\n    final_data = fetch_and_process_data()\n```", "```py\nbatch_normalization = tf.layers.batch_normalization(input_layer, fused=True, data_format='NCHW')\n```", "```py\nbatch_normalizaton = tf.contrib.layers.batch_norm(input_layer, fused=True, data_format='NCHW')\n```", "```py\noptimizer = tf.contrib.tpu.CrossShardOptimizer(existing_optimizer)\n```"]