["```py\ngit clone https://github.com/PacktPublishing/Hands-On-Intelligent-Agents-with-OpenAI-Gym.git ~/HOIAWOG\n```", "```py\npraveen@ubuntu:~$wget http://repo.continuum.io/archive/Anaconda3-4.3.0-Linux-x86_64.sh -O ~/anaconda.sh\n```", "```py\nconda update conda\n```", "```py\npraveen@ubuntu:~$bash ~/anaconda.sh -b -f -p $HOME/anaconda\n```", "```py\npraveen@ubuntu:~$export PATH=$HOME/anaconda/bin:$PATH\n```", "```py\npraveen@ubuntu:~$conda list\n```", "```py\npraveen@ubuntu:~$conda create --name rl_gym_book python=3.5\n```", "```py\npraveen@ubuntu:~$source activate rl_gym_book\n```", "```py\n(rl_gym_book) praveen@ubuntu:~$\n```", "```py\npraveen@ubuntu:~$source deactivate\n```", "```py\n(rl_gym_book) praveen@ubuntu:~$pip install gym\n```", "```py\n#! /usr/bin/env python  \nimport gym\nenv = gym.make(\"MountainCar-v0\") # Create a MountainCar environment\nenv.reset()\nfor _ in range(2000): # Run for 2000 steps\n    env.render()\n    env.step(env.action_space.sample()) # Send a random action\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG$python gym_quick_install_test.py\n```", "```py\nsudo apt-get update\n\nsudo apt-get install -y build-essential cmake python-dev python-numpy python-opengl libboost-all-dev zlib1g-dev libsdl2-dev libav-tools xorg-dev libjpeg-dev swig\n```", "```py\nbrew install cmake boost sdl2 swig wget\n\nbrew install boost-python --with-python3\n```", "```py\n(rl_gym_book) praveen@ubuntu:~$ pip install --ignore-installed pip\n```", "```py\n(rl_gym_book) praveen@ubuntu:~$cd ~\n\n(rl_gym_book) praveen@ubuntu:~$git clone https://github.com/openai/gym.git\n\n(rl_gym_book) praveen@ubuntu:~$cd gym\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/gym$pip install -e '.[all]'\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/gym$\n\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/gym$pip install -e '.[atari]'\n\n(rl_gym_book) praveen@ubuntu:~/gym$pip install -e '.[box2d]'\n\n(rl_gym_book) praveen@ubuntu:~/gym$conda install -c https://conda.anaconda.org/kne pybox2d\n\n(rl_gym_book) praveen@ubuntu:~/gym$pip install -e '.[classic_control]'\ntest_box2d.pyunder theÂ ~/rl_gym_book directory:\n```", "```py\n#!/usr/bin/env python\nimport gym\nenv = gym.make('BipedalWalker-v2')\nenv.reset()\nfor _ in range(1000):\n    env.render()\n    env.step(env.action_space.sample())\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/gym$cd ~/rl_gym_book\n\n(rl_gym_book) praveen@ubuntu:~/rl_gym_book$python test_box2d.py\n```", "```py\n(rl_gym_book) praveen@ubuntu:~$ conda install pytorch-cpu torchvision -c pytorch\n```", "```py\nsudo apt-get update\n\nsudo apt-get upgrade\n```", "```py\nsudo apt-get install -y gfortran pkg-config software-properties-common\n```", "```py\nsudo dpkg -i cuda-repo-ubuntu*.deb\n\nsudo apt-get update\n\nsudo apt-get install -y cuda\n```", "```py\nnvcc -V\n```", "```py\n(rl_gym_book) praveen@ubuntu:~$ conda install pytorch torchvision -c pytorch\n```", "```py\n#!/usr/bin/env python\nimport torch\nt = torch.Tensor(3,3) # Create a 3,3 Tensor\nprint(t)\n```"]