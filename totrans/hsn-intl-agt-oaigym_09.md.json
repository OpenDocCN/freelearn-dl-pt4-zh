["```py\nSetup completed successfully. You can now import roboschool and use it. If you would like to \\test the installation, you can run: python ~/roboschool/agent_zoo/demo_race2.py\"\n```", "```py\n`(rl_gym_book) praveen@ubuntu:~$ python ~/roboschool/agent_zoo/demo_race2.py`\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9$python run_roboschool_env.py --env RoboschoolInvertedDoublePendulum-v1\n```", "```py\nimport retro\nenv = retro.make(game='Airstriker-Genesis', state='Level1')\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/rl_gym_book/ch9$ pip install gym-retro\n```", "```py\n#!/usr/bin/env python\nimport retro\n\nif __name__ == '__main__':\n   env = retro.make(game='Airstriker-Genesis', state='Level1')\n    obs = env.reset()\n    while True:\n        obs, rew, done, info = env.step(env.action_space.sample())\n        env.render()\n        if done:\n            obs = env.reset()\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/rl_gym_book/ch9$ python -m retro.import /PATH/TO/YOUR/ROMs/DIRECTORY\nOpenAI Universe \n```", "```py\n(rl_gym_book) praveen@ubuntu:~/rl_gym_book/ch9$ python -c \"import retro; retro.list_games()\"\n\n```", "```py\n#!/usr/bin/evn python\nimport retro\nfor game in retro.list_games():\n    print(game, retro.list_states(game))\n```", "```py\nwget http://blzdistsc2-a.akamaihd.net/Linux/SC2.4.1.2.60604_2018_05_16.zip -O ~/StarCraftII/SC2.4.1.2.zip\n```", "```py\nunzip ~/StarCraftII/SC2.4.1.2.zip -d ~/StarCraftII/\n```", "```py\nwget http://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2018Season2_Updated.zip -O ~/StarCraftII/Maps/Ladder2018S2.zip\n```", "```py\nunzip ~/StarCraftII/Maps/Ladder2018S2.zip -d ~/StarCraftII/Maps/\n```", "```py\nwget https://github.com/deepmind/pysc2/releases/download/v1.2/mini_games.zip -O ~/StarCraftII/Maps/mini_games1.2.zip\n\nunzip ~/StarCraftII/Maps/mini_games1.2.zip -d ~/StarCraftII/Maps\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9$ pip install pysc2\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9$ python -m pysc2.bin.agent --map Simple64\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9$ python -m pysc2.bin.agent --map CollectMineralShards\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9$ python -m pysc2.bin.play --map Simple64\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9$ python -m pysc2.bin.agent --map CollectMineralShards --agent pysc2.agents.scripted_agent.CollectMineralShards\n```", "```py\nimport deepmind_lab\nnum_steps = 1000\nconfig = {  \n    'width': 640,\n    'height': 480,\n    'fps': 30\n}\n...\nenv = deepmind_lab.Lab(level, ['RGB_INTERLEAVED'], config=config, renderer='software')\n\nfor step in range(num_steps) \nif done:\n    env.reset()\nobs = env.observations()\naction = agent.get_action(...)\nreward = env.step(action, num_steps=1)\ndone = not env.is_running()\n```", "```py\nenv = deepmind_lab.Lab('tests/empty_room_test', ['RGBD'])\nenv.reset()\nobs = env.observations()['RGBD']\n```", "```py\n{\n    'dtype': <type 'numpy.uint8'>, ## Array data type\n    'name': 'RGBD',                ## Name of observation.\n    'shape': (4, 180, 320)         ## shape of the array. (Heights, Width, Colors)\n}\n\n{    \n    'name': 'RGB_INTERLEAVED', ## Name of observation.\n    'dtype': <type 'numpy.uint8'>, ## Data type array.     \n    'shape': (180, 320, 3) ## Shape of array. (Height, Width, Colors)\n}\n```", "```py\nimport deepmind_lab\nimport pprint\nenv = deepmind_lab.Lab('tests/empty_room_test', [])\nobservation_spec = env.observation_spec()\npprint.pprint(observation_spec)\n# Outputs:\n[{'dtype': <type 'numpy.uint8'>, 'name': 'RGB_INTERLEAVED', 'shape': (180, 320, 3)},\n {'dtype': <type 'numpy.uint8'>, 'name': 'RGBD_INTERLEAVED', 'shape': (180, 320, 4)},\n {'dtype': <type 'numpy.uint8'>, 'name': 'RGB', 'shape': (3, 180, 320)},\n {'dtype': <type 'numpy.uint8'>, 'name': 'RGBD', 'shape': (4, 180, 320)},\n {'dtype': <type 'numpy.uint8'>, 'name': 'BGR_INTERLEAVED', 'shape': (180, 320, 3)},\n {'dtype': <type 'numpy.uint8'>, 'name': 'BGRD_INTERLEAVED', 'shape': (180, 320, 4)},\n {'dtype': <type 'numpy.float64'>, 'name': 'MAP_FRAME_NUMBER', 'shape': (1,)},\n {'dtype': <type 'numpy.float64'>, 'name': 'VEL.TRANS', 'shape': (3,)},\n {'dtype': <type 'numpy.float64'>, 'name': 'VEL.ROT', 'shape': (3,)},\n {'dtype': <type 'str'>, 'name': 'INSTR', 'shape': ()},\n {'dtype': <type 'numpy.float64'>, 'name': 'DEBUG.POS.TRANS', 'shape': (3,)},\n {'dtype': <type 'numpy.float64'>, 'name': 'DEBUG.POS.ROT', 'shape': (3,)},\n {'dtype': <type 'numpy.float64'>, 'name': 'DEBUG.PLAYER_ID', 'shape': (1,)},\n# etc...\n```", "```py\nimport deepmind_lab\nimport pprint\n\nenv = deepmind_lab.Lab('tests/empty_room_test', [])\naction_spec = env.action_spec()\npprint.pprint(action_spec)\n# Outputs:\n```", "```py\n# [{'max': 512, 'min': -512, 'name': 'LOOK_LEFT_RIGHT_PIXELS_PER_FRAME'},\n#  {'max': 512, 'min': -512, 'name': 'LOOK_DOWN_UP_PIXELS_PER_FRAME'},\n#  {'max': 1, 'min': -1, 'name': 'STRAFE_LEFT_RIGHT'},\n#  {'max': 1, 'min': -1, 'name': 'MOVE_BACK_FORWARD'},\n#  {'max': 1, 'min': 0, 'name': 'FIRE'},\n#  {'max': 1, 'min': 0, 'name': 'JUMP'},\n#  {'max': 1, 'min': 0, 'name': 'CROUCH'}]\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9$./setup_deepmindlab.sh\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9$ cd deepmindlab\n\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9/deepmindlab$ bazel run :game -- --level_script=tests/empty_room_test\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9/deepmindlab$ bazel run :python_random_agent --define graphics=sdl -- --length=5000\n```", "```py\n(rl_gym_book) praveen@ubuntu:~/HOIAWOG/ch9/deepmindlab$ bazel run :python_random_agent\n```"]