["```py\n      $ python3 -m venv venv\n      $ source venv/bin/activate\n```", "```py\n      $ deactivate \n```", "```py\n      $ pip install â€“r requirements.txt \n```", "```py\n      $ python3 chapter_4/activity_1/test_stack.py \n```", "```py\n      $ tensorboard --help \n```", "```py\n    W = tf.Variable(\n        tf.truncated_normal([5, 5, size_in, size_out],\n        stddev=0.1),\n        name=\"Weights\")    \n    B = tf.Variable(tf.constant(0.1, shape=[size_out]), \n        name=\"Biases\")\n\n    convolution = tf.nn.conv2d(input, W, strides=[1, 1, 1, 1],\n    padding=\"SAME\")\n    activation = tf.nn.relu(convolution + B)\n\n    tf.nn.max_pool(\n    activation,\n    ksize=[1, 2, 2, 1],\n    strides=[1, 2, 2, 1],\n    padding=\"SAME\") \n```", "```py\n    W = tf.Variable(\n        tf.truncated_normal([size_in, size_out], stddev=0.1),\n        name=\"Weights\")\n    B = tf.Variable(tf.constant(0.1, shape=[size_out]),\n        name=\"Biases\")\n        activation = tf.matmul(input, W) + B\n```", "```py\n  $ tensorboard --logdir=mnist_example/ \n```", "```py\n     LEARNING_RATE = 0.0001\n     EPOCHS = 2000\n```"]