["```py\npublic static void main(String[] args) {\n    ${cursor}\n}\n```", "```py\n#ifndef ${header_guard}\n#define ${header_guard}\n${cursor}\n#endif // ${header_guard}\n```", "```py\nfor (int i = 0; i < ${size}; i++) {\n     ${cursor}\n}\n```", "```py\ndef ${functionName}(${parameters}):\n${cursor}\n```", "```py\nclass ${className}:\ndef __init__(self, ${parameters}):\n${cursor}\n```", "```py\nprint(Object obj)                                     void\nprint(String s)                                       void\nprint(boolean b)                                      void\nprint(char c)                                         void\nprint(char[] s)                                       void\n```", "```py\naddPropertyChangeListener (PropertyChangeLi..\naddPropertyChangeListener (String propertyN…\ngetPropertyChangeListeners ()\ngetPropertyChangeListener (String property..\netc.\n```", "```py\nbinding.toString()                                   String\nclone().toString()                                   String\ngetClass().getCanonicalName()                        String\ngetClass().getName()                                 String\n```", "```py\n    Properties\n    sonar.projectKey=my-java-project\n    sonar.projectName=My Java Project\n    sonar.sources=src/main/java\n    ```", "```py\n    sonar-scanner -Dsonar.projectKey=my_project -Dsonar.sources=.\n    ```", "```py\nmodule.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quotes\": [\"error\", \"single\"]\n    }\n};\n```", "```py\nmvn pmd:pmd\n```", "```py\n<plugin>\n  <groupId>org.apache.maven.plugins</groupId>\n  <artifactId>maven-pmd-plugin</artifactId>\n  <version>3.19.0</version>\n  <configuration>\n    </configuration>\n</plugin>\n```", "```py\n# To run SpotBugs on a Java project, you would use:\nmvn spotbugs:check\n```", "```py\n# To run Bandit on a Python project, you would use:\nbandit -r my_project/\n```", "```py\ntest('adds 1 + 2 to equal 3', () => {\n    expect(1 + 2).toBe(3);\n});\n```", "```py\npm.test(\"Status code is 200\", function () {\n    pm.response.to.have.status(200);\n});\n```"]